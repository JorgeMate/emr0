# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    cache_adapter: cache.adapter.apcu
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|fr|es|nl
    app.notifications.email_sender: kimberly.systems@gmail.com
    session_max_idle_time: 900 // value in seconds

    uploads_base_url: 'https://%env(AWS_S3_BUCKET_NAME)%.s3.amazonaws.com'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:               # defines the scalar arguments once and apply them to any service defined/created in this file
            $locales: '%app_locales%'
            $defaultLocale: '%locale%'
            #$emailSender: '%app.notifications.email_sender%'
            $uploadsFilesystem: '@oneup_flysystem.uploads_filesystem_filesystem'
            $uploadedAssetsBaseUrl: '%uploads_base_url%'

            $s3BucketName: '%env(AWS_S3_BUCKET_NAME)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones







    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            #- 'mysql:dbname=mydatabase; host=myhost; port=myport'
            #- { db_username: myuser, db_password: mypassword }

            # If you're using Doctrine & want to re-use that connection, then:
            # comment-out the above 2 lines and uncomment the line below
            - !service { class: PDO, factory: 'database_connection:getWrappedConnection' }
            # If you get transaction issues (e.g. after login) uncomment the line below
            - { lock_mode: 1 }

    App\EventListener\LoginListener:
        tags: [{ name: kernel.event_listener, event: security.interactive_login }]

    App\EventListener\LogoutListener:
    #app\logout\listener:
        #class: App\EventListener\LogoutListener
        tags:
            - name: 'kernel.event_listener'
              event: security.interactive_logout
                #'Symfony\Component\Security\Http\Event\LogoutEvent'
              displatcher: security.event_dispatcher.main






    twig.extension.date:
        class: Guzzlefry\Twig\AgeExtension
        tags:
            - { name: twig.extension }        

    Symfony\Component\Asset\Context\RequestStackContext: '@assets.context'

    Aws\S3\S3Client:
        arguments:
            -
                version: '%env(AWS_S3_VERSION)%'
                region: '%env(AWS_S3_REGION)%'
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'
